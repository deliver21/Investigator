@model Template
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@{
    TempData["TemplateTitle"] = Model.Title;
}
<input type="hidden" id="baseUrl" value="@TempData["baseUrl"]" hidden>
<input type="hidden" id="templateId" value="@Model.TemplateId" hidden>
<div class="container mb-2">
    <a class="m-1 p-2 px-2 text-start text-center btn btn-sm btn-outline-info rounded-1" asp-area="Admin" asp-controller="Template" asp-action="Index">
        <i class="bi bi-arrow-bar-left"></i> @localizer["Back"]
    </a>
    <div class="card">
        <img src="@(Model != null ? $"https://drive.google.com/thumbnail?id={Model.ImageId}" : "https://via.placeholder.com/1200x300")"
             class="card-img-top" alt="Event Image" style="max-height:100px; object-fit: cover;">
        <div class="card-body">
            <h3 class="card-title text-center">@(Model != null && !string.IsNullOrEmpty(Model.Title) ? Model.Title : localizer["Emptytitle"]) – Template</h3>
            <hr>
            <p class="text-center">
                @(Model != null ? Html.Raw(Model.Description) :"")
            </p>
        </div>
    </div>

    <!-- Question List -->
    <div class="mt-0">
        <div id="questions" class="list-group">      
            @if(Model != null && Model.Questions.Count > 0)
            {
                foreach (var question in Model.Questions.OrderBy(q => q.Order))
                {
                    <div class="list-group-item m-1" data-question-id="@question.QuestionId" draggable="true">
                        <input type="hidden" name="questions[@question.QuestionId].id" value="@question.QuestionId">
                        <input type="text" name="questions[@question.QuestionId].text" value="@question.Text" 
                               placeholder="Question text" class="form-control mb-2 font-weight-bold" required>
                        <select name="questions[@question.QuestionId].type" class="form-select" value="@question.Type">
                            <option value="SingleLine">Single Line</option>
                            <option value="MultiLine">Multi Line</option>
                            <option value="Integer">Integer</option>
                            <option value="CheckBox">CheckBox</option>
                        </select> 
                        <button type="button" class="btn btn-sm btn-warning text-start toggle-required">
                            @(question.IsOptional ? "Mark as Required" : "Mark as Optional")
                        </button>
                        <button type="button" class="btn btn-sm btn-danger text-end m-1">
                            <i class="bi bi-file-earmark-x"></i> @localizer["Deletequestion"]
                        </button>
                    </div>
                }
            }
        </div>
    </div>

    <!-- Add and Save Buttons -->
    <button id="addQuestion" class="btn btn-info mt-3 rounded-1"><i class="bi bi-file-plus"></i> @localizer["Addquestion"]</button>
    <button id="saveQuestions" class="btn btn-primary mt-3 rounded-1"><i class="bi bi-floppy"></i> @localizer["Savequestions"]</button>
</div>

@section Scripts
{
    <script src="~/js/managequestion.js"></script>
}
